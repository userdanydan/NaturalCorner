<?php

require_once '/Users/ivymike/Documents/workspacePHP/NaturalCorner/model/Rayon.class.php';
require_once '/Users/ivymike/Documents/workspacePHP/NaturalCorner/exceptions/RayonException.class.php';

/**
 * Test class for Rayon.
 * Generated by PHPUnit on 2016-04-05 at 13:18:00.
 */
class RayonTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Rayon
     */
    protected $rayon;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->rayon = new Rayon("porte 1");
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->rayon=null;
    }
    /**
     * @covers Rayon::getId
     * @todo Implement testGetId().
     */
    public function testGetId()
    {
        $this->assertEquals($this->rayon->getId(), 0, "devrait afficher 0");
         
    }
    /**
     * @covers Rayon::setId
     * @todo Implement testSetId().
     */
    public function testSetId()
    {
        $this->rayon->setId(1000);
        $this->assertEquals($this->rayon->getId(), 1000, "devrait aficher 1000");
         
         
        try{
            $this->rayon->setId(-1);
        }catch(RayonException $ue){
            return;
        }
        $this>fail( "aurait dÃ» lancer une exception.");
    
    }
    /**
     * @covers Rayon::getEmplacement
     * @todo Implement testGetEmplacement().
     */
    public function testGetEmplacement()
    {
        $this->assertEquals($this->rayon->getEmplacement(), "porte 1", "devrait afficher porte 1");
         
    }
    /**
     * @covers Rayon::setEmplacement
     * @todo Implement testSetEmplacement().
     */
    public function testSetEmplacement()
    {
        $this->rayon->setEmplacement("porte 2");
        $this->assertEquals($this->rayon->getEmplacement(), "porte 2", "devrait aficher porte 2");
    
    }
    /**
     * @covers Article::__toString()
     */
    public function testToString()
    {
        $stringArticle = $this->rayon->__toString();
        $this->assertEquals('{"id"="0","emplacement"="porte 1"}',$stringArticle);
    }
}
?>
