<?php

require_once '/Users/ivymike/Documents/workspacePHP/NaturalCorner/model/Categorie.class.php';
require_once '/Users/ivymike/Documents/workspacePHP/NaturalCorner/exceptions/CategorieException.class.php';


/**
 * Test class for Categorie.
 * Generated by PHPUnit on 2016-04-05 at 13:47:10.
 */
class CategorieTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Categorie
     */
    protected $categorie;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->categorie = new Categorie("Fruit");
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->categorie=null;
    }

    /**
     * @covers Categorie::getId
     * @todo Implement testGetId().
     */
    public function testGetId()
    {
        $this->assertEquals($this->categorie->getId(), 0, "devrait afficher 0");
    }
    /**
     * @covers Categorie::setId
     * @todo Implement testSetId().
     */
    public function testSetId()
    {
        $this->categorie->setId(1000);
        $this->assertEquals($this->categorie->getId(), 1000, "devrait aficher 1000");
         
         
        try{
            $this->categorie->setId(-1);
        }catch(CategorieException $ue){
            return;
        }
        $this>fail( "aurait dû lancer une exception.");
        
    }


    /**
     * @covers Categorie::setCategorie
     * @todo Implement testSetCategorie().
     */
    public function testSetCategorie()
    {
        $this->categorie->setCategorie("Légume");
        $this->assertEquals($this->categorie->getCategorie(), "Légume", "devrait aficher Légume");
    }

    /**
     * @covers Categorie::getCategorie
     * @todo Implement testGetCategorie().
     */
    public function testGetCategorie()
    {
        $this->assertEquals($this->categorie->getCategorie(), "Fruit", "devrait afficher Fruit");
        
    }
    /**
     * @covers Categorie::__toString
     * @todo Implement test__toString().
     */
    public function test__toString()
    {
        $stringArticle = $this->categorie->__toString();
        $this->assertEquals('{"id"="0","categorie"="Fruit"}',$stringArticle);
    }
    /**
     * @covers Categorie::getJsonData
     * @todo Implement testGetJsonData().
     */
    public function testGetJsonData()
    {
        $stringArticle = json_encode($this->categorie->getJsonData()) ;
        $this->assertEquals('{"_id":0,"_categorie":"Fruit"}',$stringArticle);
    }
}
?>
