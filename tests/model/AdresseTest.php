<?php

require_once '/Users/ivymike/Documents/workspacePHP/NaturalCorner/model/Adresse.class.php';

/**
 * Test class for Adresse.
 * Generated by PHPUnit on 2016-04-01 at 15:47:54.
 */
class AdresseTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Adresse
     */
    protected $adresse;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->adresse = new Adresse("rue", "numero", "numBoite", "codePostal", "localite", "pays");
    }
    
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }
    /**
     * @covers Adresse::getId()
     */
    public function testGetId()
    {
        $this->assertEquals($this->adresse->getId(), 0, "devrait afficher 0");
        
    }
    /**
     * @covers Adresse::setId()
     */
    public function testSetId()
    {
    
    }
     /**
     * @covers Adresse::getRue()
     */
    public function testGetRue()
    {
        $this->assertEquals($this->adresse->getRue(), "rue", "devrait afficher rue");
        
    }
    /**
     * @covers Adresse::setRue()
     */
    public function testSetRue()
    {
        $this->adresse->setRue("avenue");
        $this->assertEquals($this->adresse->getRue(), "avenue", "devrait afficher avenue");
    
    }
    /**
     * @covers Adresse::getNumero()
     */
    public function testGetNumero()
    {
        $this->assertEquals($this->adresse->getNumero(), "numero", "devrait afficher numero");
    
    }
    /**
     * @covers Adresse::setNumero()
     */
    public function testSetNumero()
    {
        $this->adresse->setRue("NumeroBis");
        $this->assertEquals($this->adresse->getRue(), "NumeroBis", "devrait afficher NumeroBis");
    
    }
    /**
     * @covers Adresse::getNumBoite()
     */
    public function testGetNumBoite()
    {
        $this->assertEquals($this->adresse->getNumeroBoite(), "numBoite", "devrait afficher numBoite");
    
    }
    /**
     * @covers Adresse::setNumBoite()
     */
    public function testSetNumBoite()
    {
        $this->adresse->setNumeroBoite("NumeroBoiteBis");
        $this->assertEquals($this->adresse->getNumeroBoite(), "NumeroBoiteBis", "devrait afficher NumeroBoiteBis");
    
    }
    /**
     * @covers Adresse::getCodePostal()
     */
    public function testGetCodePostal()
    {
        $this->assertEquals($this->adresse->getCodePostal(), "codePostal", "devrait afficher codePostal");
    
    }
    /**
     * @covers Adresse::setCodePostal()
     */
    public function testSetCodePostal()
    {
        $this->adresse->setCodePostal("codePostalFrancais");
        $this->assertEquals($this->adresse->getCodePostal(), "codePostalFrancais", "devrait afficher codePostalFrancais");
    
    }
    /**
     * @covers Adresse::getLocalite()
     */
    public function testGetLocalite()
    {
        $this->assertEquals($this->adresse->getLocalite(), "localite", "devrait afficher localite");
    
    }
    /**
     * @covers Adresse::setLocalite()
     */
    public function testSetLocalite()
    {
        $this->adresse->setLocalite("localiteAutre");
        $this->assertEquals($this->adresse->getLocalite(), "localiteAutre", "devrait afficher localiteAutre");
    
    }
    /**
     * @covers Adresse::getPays()
     */
    public function testGetPays()
    {
        $this->assertEquals($this->adresse->getPays(), "pays", "devrait afficher pays");
    
    }
    /**
     * @covers Adresse::setPays()
     */
    public function testSetPays()
    {
        $this->adresse->setPays("paysAutre");
        $this->assertEquals($this->adresse->getPays(), "paysAutre", "devrait afficher paysAutre");
    
    }
    /**
     * @covers Article::__toString()
     */
    public function testToString()
    {
        $stringArticle = $this->adresse->__toString();
        $this->assertEquals(
                '{"id"="0","rue"="rue","numero"="numero","numeroBoite"="numBoite","codePostal"="codePostal","localite"="localite","pays"="pays"}', 
                $stringArticle);
    }

    public function testGetNumeroBoite()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }


    public function testSetNumeroBoite()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }


    public function test__toString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }


    public function test__destruct()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

}
?>
