<?php

require_once __DIR__.'/../../model/LignePanier.class.php';
require_once __DIR__.'/../../model/Article.class.php';
require_once __DIR__.'/../../model/Rayon.class.php';



/**
 * Test class for LignePanier.
 * Generated by PHPUnit on 2016-03-06 at 19:07:42.
 */
class LignePanierTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var LignePanier
     */
    protected $lignePanier;
    /**
     * @var Article
     */
    protected $article;
    /**
     * 
     * @var Rayon
     */
    protected $rayon;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->rayon = new Rayon("porte 1");
        $this->article = new Article("poire", 120, "poire bio de Flandre", 1, 0, $this->rayon);
        $this->lignePanier = new LignePanier($this->article, 3);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->article=null;
        $this->lignePanier=null;
    }
    /**
     * @covers LignePanier::getArticle()
     */
    public function testGetArticle()
    {
        // Même méthode __toString().
        $this->assertEquals($this->lignePanier->getArticle(), $this->article);
        // Mêmes attributs.
        $this->assertTrue($this->lignePanier->getArticle()==$this->article);
        // Il s'agit en fait du même objet, la référence est identique.
        $this->assertTrue($this->lignePanier->getArticle()===$this->article);
    
        //article identique mais correspondant à une nouvelle instanciation.
        $rayon2 = new Rayon("porte 1");
        $articleTest2 = new Article("poire", 120, "poire bio de Flandre", 1, 0, $rayon2);
    
        // Même méthode __toString().
        $this->assertEquals($this->lignePanier->getArticle(), $articleTest2);
        // Mêmes attributs.
        $this->assertTrue($this->lignePanier->getArticle()==$articleTest2);
        // Références différentes.
        $this->assertFalse($this->lignePanier->getArticle()===$articleTest2);
    
        //tests de confirmation.
        $rayon3 = new Rayon("porte 3");
        $articleTest = new Article("pomme", 120, "pomme verte", 1, 0, $rayon3);
         
        $this->assertNotEquals($this->lignePanier->getArticle(), $articleTest);
        $this->assertFalse($this->lignePanier->getArticle()==$articleTest);
        $this->assertFalse($this->lignePanier->getArticle()===$articleTest);
    
    }
    /**
     * @covers LignePanier::getQuantite()
     */
    public function testGetQuantite()
    {
        $this->assertEquals($this->lignePanier->getQuantite(), 3, "devrait afficher 3");
         
    }
    /**
     * @covers LignePanier::setQuantite()
     */
    public function testSetQuantite()
    {
        $this->lignePanier->setQuantite(2);
        $this->assertEquals($this->lignePanier->getQuantite(), 2, "devrait afficher 2");
    }
    /**
     * @covers LignePanier::getMontant()
     */
    public function testGetMontant()
    {
        $this->assertEquals( 360, $this->lignePanier->getMontant(), "devrait afficher 360");
         
    }
    
   
    
}
?>
