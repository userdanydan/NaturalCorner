<?php

require_once '/Users/ivymike/Documents/workspacePHP/NaturalCorner/exceptions/UtilisateurException.class.php';
require_once '/Users/ivymike/Documents/workspacePHP/NaturalCorner/model/Utilisateur.class.php';

/**
 * Test class for Utilisateur.
 * Generated by PHPUnit on 2015-12-29 at 19:31:51.
 */
class UtilisateurTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Utilisateur
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    	$this->object = new Utilisateur("Daniel", "Dan", "DanyDan", "caca", "truc@troc.tr", "rue des petites fleurs 5",
    			"1070", "Anderlecht", new DateTime("2015-01-01T00:00:00"), "192.168.0.1");       
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
		unset($this->object);
    }

    /**
     * @covers Utilisateur::setId
     * @todo Implement testSetId().
     */
    public function testSetId()
    {
    	// Remove the following lines when you implement this test.
    	$this->markTestIncomplete(
    			'This test has not been implemented yet.'
    			);
    }

    /**
     * @covers Utilisateur::getId
     * @todo Implement testGetId().
     */
    public function testGetId()
    {
    	$this->assertEquals($this->object->getId(), 0, "devrait afficher 0");
    	
    }

    /**
     * @covers Utilisateur::setPrenom
     * @todo Implement testSetPrenom().
     */
    public function testSetPrenom()
    {
    	// Remove the following lines when you implement this test.
    	$this->markTestIncomplete(
    			'This test has not been implemented yet.'
    			);
    }

    /**
     * @covers Utilisateur::getPrenom
     * @todo Implement testGetPrenom().
     */
    public function testGetPrenom()
    {
        
        $this->assertEquals("Daniel", $this->object->getPrenom(), "Devrait afficher Daniel");
    }

    /**
     * @covers Utilisateur::setNom
     * @todo Implement testSetNom().
     */
    public function testSetNom()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Utilisateur::getNom
     * @todo Implement testGetNom().
     */
    public function testGetNom()
    {
        $this->assertEquals("Dan", $this->object->getNom(), "devrait afficher Dan");
    
    }

    /**
     * @covers Utilisateur::setPseudo
     * @todo Implement testSetPseudo().
     */
    public function testSetPseudo()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Utilisateur::getPseudo
     * @todo Implement testGetPseudo().
     */
    public function testGetPseudo()
    {
        $this->assertEquals("DanyDan", $this->object->getPseudo(), "devrait afficher DanyDan");
    }

    /**
     * @covers Utilisateur::setPass
     * @todo Implement testSetPass().
     */
    public function testSetPass()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Utilisateur::getPass
     * @todo Implement testGetPass().
     */
    public function testGetPass()
    {
        $this->assertEquals("caca", $this->object->getPass(), "devrait afficher caca");
    }

    /**
     * @covers Utilisateur::setAdresseMail
     * @todo Implement testSetAdresseMail().
     */
    public function testSetAdresseMail()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Utilisateur::getAdresseMail
     * @todo Implement testGetAdresseMail().
     */
    public function testGetAdresseMail()
    {
        $this->assertEquals("truc@troc.tr", $this->object->getAdresseMail(), "devrait afficher truc@troc.tr");
    }

    /**
     * @covers Utilisateur::setAdressePhysique
     * @todo Implement testSetAdressePhysique().
     */
    public function testSetAdressePhysique()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Utilisateur::getAdressePhysique
     * @todo Implement testGetAdressePhysique().
     */
    public function testGetAdressePhysique()
    {
        $this->assertEquals("rue des petites fleurs 5", $this->object->getAdressePhysique(), "devrait afficher rue des petites fleurs 5");
    	
    }

    /**
     * @covers Utilisateur::setCodePostal
     * @todo Implement testSetCodePostal().
     */
    public function testSetCodePostal()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Utilisateur::getCodePostal
     * @todo Implement testGetCodePostal().
     */
    public function testGetCodePostal()
    {
        $this->assertEquals("1070", $this->object->getCodePostal(), "devrait afficher 1070");
    	
    }

    /**
     * @covers Utilisateur::setLocalite
     * @todo Implement testSetLocalite().
     */
    public function testSetLocalite()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Utilisateur::getLocalite
     * @todo Implement testGetLocalite().
     */
    public function testGetLocalite()
    {
        $this->assertEquals("Anderlecht", $this->object->getLocalite(), "devrait afficher Anderlecht");
    	
    }
    /**
     * @covers Utilisateur::setDateInscription
     * @todo Implement testSetDateInscription().
     */
    public function testSetDateInscription()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Utilisateur::getDateInscription
     * @todo Implement testGetDateInscription().
     */
    public function testGetDateInscription()
    {
    	
        $this->assertEquals(new DateTime("2015-01-01T00:00:00"), $this->object->getDateInscription(), "devrait afficher 2015-01-01T00:00:00");
    	
    }
    /**
     * @covers Utilisateur::setIdConnexion
     * @todo Implement testSetIdConnexion().
     */
    public function testSetIdConnexion()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Utilisateur::getIdConnexion
     * @todo Implement testGetIdConnexion().
     */
    public function testGetIdConnexion()
    {
        $this->assertEquals("192.168.0.1", $this->object->getIdConnexion(), "devrait afficher 192.168.0.1");
    	
    }
}
?>
